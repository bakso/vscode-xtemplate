{
    "fileTypes": [
        "xtpl"
    ],
    "name": "XTemplate",
    "patterns": [
        {
            "begin": "\\{\\{!",
            "end": "\\}\\}",
            "name": "comment.block.xtpl"
        },
        {
            "begin": "\\{\\{%",
            "end": "%\\}\\}",
            "captures": {
                "0": {
                    "name": "entity.name.tag.xtpl"
                }
            },
            "patterns": [
                {
                    "include": "text.html.xtpl"
                }
            ]
        },
        {
            "begin": "(\\{\\{\\{?)\\s*(#)(\\w[\\w-]*)\\s*",
            "end": "\\}\\}\\}?",
            "name": "block_begin",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag.xtpl"
                },
                "2": {
                    "name": "keyword.control"
                },
                "3": {
                    "name": "keyword.control"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "entity.name.tag.xtpl"
                }
            },
            "patterns": [
                {
                    "include": "#function-params"
                }
            ]
        },
        {
            "begin": "(\\{\\{\\{?)(/)(\\w[\\w/-]*)\\s*",
            "end": "\\}\\}\\}?",
            "name": "block_end",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag.xtpl"
                },
                "2": {
                    "name": "keyword.control"
                },
                "3": {
                    "name": "keyword.control"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "entity.name.tag.xtpl"
                }
            }
        },
        {
            "begin": "(\\{\\{)\\s*(else(?:if)?)\\s*",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag.xtpl"
                },
                "2": {
                    "name": "keyword.control"
                }
            },
            "end": "\\}\\}",
            "endCaptures": {
                "0": {
                    "name": "entity.name.tag.xtpl"
                }
            },
            "name": "control_branch",
            "patterns": [
                {
                    "include": "#function-params"
                }
            ]
        },
        {
            "begin": "(\\{\\{\\{?)\\s*(include|set|require|void|parse|extend|use|block|macro)\\s*\\(",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag.xtpl"
                },
                "2": {
                    "name": "entity.name.function"
                }
            },
            "end": "\\}\\}\\}?",
            "endCaptures": {
                "0": {
                    "name": "entity.name.tag.xtpl"
                }
            },
            "name": "function_call",
            "patterns": [
                {
                    "include": "#function-params"
                }
            ]
        },
        {
            "begin": "(\\{\\{\\{?)",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.tag.xtpl"
                }
            },
            "end": "\\}\\}\\}?",
            "endCaptures": {
                "0": {
                    "name": "entity.name.tag.xtpl"
                }
            },
            "patterns": [
                {
                    "include": "#function-params"
                }
            ]
        },
        {
            "include": "text.html.basic"
        }
    ],
    "repository": {
        "strings": {
            "patterns": [
                {
                    "begin": "'",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.xtpl"
                        }
                    },
                    "end": "'",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.xtpl"
                        }
                    },
                    "name": "string.quoted.single.xtpl"
                },
                {
                    "begin": "\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.xtpl"
                        }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.xtpl"
                        }
                    },
                    "name": "string.quoted.double.xtpl"
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "match": "\\b(?<!\\$|_)((0(x|X)[0-9a-fA-F]+)|(0(b|B)[01]+)|(0(o|O)[0-7]+)|([0-9]+(\\.[0-9]+)?)((e|E)[+-]?[0-9]+)?)\\b",
                    "name": "constant.numeric.xtpl"
                }
            ]
        },
        "boolean": {
            "patterns": [
                {
                    "match": "(?<!\\.)\\b(true|false)(?!\\s*:)\\b|(?<=\\?)(?:\\s*)(true|false)(?=\\s*:)",
                    "captures": {
                        "1": {
                            "name": "support.variable.function.xtpl"
                        },
                        "2": {
                            "name": "support.variable.function.xtpl"
                        }
                    }
                }
            ]
        },
        "special": {
            "patterns": [
                {
                    "match": "\\b(Infinity|NaN|undefined|null|xindex|xvalue)\\b",
                    "name": "constant.language.xtpl"
                }
            ]
        },
        "function-params": {
            "patterns": [
                {
                    "include": "#numbers"
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#boolean"
                },
                {
                    "include": "#special"
                },
                {
                    "match": "\\(|\\)",
                    "name": "meta.brace.round.xtpl"
                },
                {
                    "match": "\\[|\\]",
                    "name": "meta.brace.square.xtpl"
                },
                {
                    "match": "{|}",
                    "name": "meta.brace.curly.xtpl"
                },
                {
                    "match": ",",
                    "name": "meta.object.delimiter.xtpl"
                },                
                {
                    "match": "[a-zA-Z_$][a-zA-Z_$0-9]*",
                    "name": "variable.parameter.function.xtpl"
                }
            ]
        }
    },
    "scopeName": "text.html.xtpl"
}